services:
  db:
    image: postgres:17-alpine
    container_name: postgres_db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_SUPER_USER}
      - POSTGRES_PASSWORD=${POSTGRES_SUPER_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - APP_DATABASE_SCHEMA=${APP_DATABASE_SCHEMA}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./init-schema.sh:/docker-entrypoint-initdb.d/init-schema.sh
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${POSTGRES_SUPER_USER} -d ${POSTGRES_DB}
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  atlas:
    image: arigaio/atlas:latest
    container_name: atlas_migrations
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./migrations:/migrations
    command: >
      migrate apply
      --url "postgres://${POSTGRES_SUPER_USER}:${POSTGRES_SUPER_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable"
      --dir "file:///migrations"
    networks:
      - app_network

volumes:
  postgres_data:
    name: postgres_data
  postgres_data_dev:
    name: postgres_data_dev

networks:
  app_network:
    driver: bridge
